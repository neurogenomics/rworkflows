% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_description.R
\name{get_description}
\alias{get_description}
\title{Get DESCRIPTION}
\usage{
get_description(
  refs = NULL,
  paths = here::here("DESCRIPTION"),
  db = NULL,
  cache_dir = tools::R_user_dir(package = "rworkflows", which = "cache"),
  force_new = FALSE,
  use_wd = TRUE,
  use_repos = FALSE,
  repo = c("BioCsoft", "BioCann", "BioCexp", "BioCworkflows", "CRAN"),
  verbose = TRUE
)
}
\arguments{
\item{refs}{Reference for one or more GitHub repository in owner/repo format
 (e.g.\code{"neurogenomics/rworkflows"}), or an R package name 
(e.g. \code{"rworkflows"}).}

\item{paths}{Paths to \emph{DESCRIPTION} file(s)  R package(s).}

\item{db}{A \link[data.table]{data.table} of R package metadata generated by
\link[BiocPkgTools]{biocPkgList}.}

\item{cache_dir}{Directory where to cache downloaded files.}

\item{force_new}{Ignore cached files and re-download them instead.}

\item{use_wd}{Search the local working directory (and the one above it)
for \emph{DESCRIPTION} files.}

\item{use_repos}{Use R standard R package repositories like CRAN and Bioc
to find \emph{DESCRIPTION} files.}

\item{repo}{\code{character(1)} The requested Bioconductor repository. The default
is to pull from the "BioCsoft" repository. Possible repositories include
"BioCsoft", "BioCexp", "BioCworkflows", "BioCann", and "CRAN". Note that
not all repos are available for all versions, particularly older versions.}

\item{verbose}{Print messages.}
}
\value{
A named list of \code{packageDescription} objects.
}
\description{
The \href{https://en.wikipedia.org/wiki/Taken_(film)}{Liam Neeson}
 of \emph{DESCRIPTION} file functions.
\enumerate{
\item{I will look for you,}
\item{I will find you,}
\item{---and I will import you into a neatly parsed R object.}
}
Uses a variety of alternative methods, including searching locally and on
GitHub (whenever possible). Prioritises the fastest methods that do
not involve downloading files first.
}
\examples{
d <- get_description(refs="neurogenomics/rworkflows")
}
